from telethon.sync import TelegramClient
import asyncio

# –¢–í–û–ò –î–ê–ù–ù–´–ï! –ó–ê–ú–ï–ù–ò –ò–•!
api_id = 12345678  # –í–≤–µ–¥–∏ —Å–≤–æ–π api_id
api_hash = '—Ç–≤–æ–π_api_hash_—Ç—É—Ç'  # –í–≤–µ–¥–∏ —Å–≤–æ–π api_hash

# –°–ü–ò–°–û–ö –î–õ–Ø –°–û–•–†–ê–ù–ï–ù–ò–Ø (–∏ —á–∞—Ç—ã, –∏ –±–æ—Ç—ã)
WHITELIST = [
    "–û—á–µ–Ω—å –í–∞–∂–Ω—ã–π –ß–∞—Ç",
    "–ú–µ–º—ã –æ—Ç –¥—Ä—É–∑–µ–π", 
    "@username_–±–æ—Ç–∞",
    "–†–∞–±–æ—Ç–∞"
]

async def main():
    client = TelegramClient('session_name', api_id, api_hash)
    await client.start()
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ!")
    print("üìã –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–∏–∞–ª–æ–≥–æ–≤...")
    
    dialogs = await client.get_dialogs()
    dialogs_to_delete = []
    
    print("\n" + "="*50)
    print("üìä –ê–ù–ê–õ–ò–ó–ò–†–£–Æ –î–ò–ê–õ–û–ì–ò:")
    print("="*50)
    
    for dialog in dialogs:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫
        if dialog.name in WHITELIST:
            print(f"‚úÖ –°–û–•–†–ê–ù–Ø–Æ: {dialog.name}")
            continue
            
        if hasattr(dialog.entity, 'username') and dialog.entity.username:
            username = f"@{dialog.entity.username}"
            if username in WHITELIST:
                print(f"‚úÖ –°–û–•–†–ê–ù–Ø–Æ: {username}")
                continue
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–Ω—è—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        if dialog.is_user:
            # –≠—Ç–æ –±–æ—Ç –∏–ª–∏ –ª–∏—á–Ω—ã–π —á–∞—Ç
            if hasattr(dialog.entity, 'bot') and dialog.entity.bot:
                dialog_type = "–ë–û–¢"
            else:
                dialog_type = "–õ–ò–ß–ù–´–ô –ß–ê–¢"
        elif dialog.is_group:
            dialog_type = "–ì–†–£–ü–ü–ê"
        elif dialog.is_channel:
            if hasattr(dialog.entity, 'broadcast') and dialog.entity.broadcast:
                dialog_type = "–ö–ê–ù–ê–õ"
            else:
                dialog_type = "–°–£–ü–ï–†–ì–†–£–ü–ü–ê"
        else:
            dialog_type = "–ß–ê–¢"
        
        dialogs_to_delete.append((dialog, dialog_type))
        print(f"‚ùå –ë–£–î–£ –í–´–•–û–î–ò–¢–¨: {dialog.name} ({dialog_type})")
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print("\n" + "="*50)
    print(f"üìà –ò–¢–û–ì–û: {len(dialogs_to_delete)} –¥–∏–∞–ª–æ–≥–æ–≤ –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    print("="*50)
    
    if not dialogs_to_delete:
        print("üéâ –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å! –í—Å–µ —á–∏—Å—Ç–æ!")
        return
        
    print("\nüí° –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:")
    for dialog, dialog_type in dialogs_to_delete:
        print(f"   ‚Ä¢ {dialog.name} ({dialog_type})")
    
    answer = input("\nüöÄ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã—Ö–æ–¥? (y/N): ")
    if answer.lower() != 'y':
        print("‚ùé –û—Ç–º–µ–Ω–∞.")
        return
    
    # –í—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–æ–≤
    print("\n" + "="*50)
    print("üö™ –ù–ê–ß–ò–ù–ê–Æ –í–´–•–û–î:")
    print("="*50)
    
    success = 0
    errors = 0
    
    for dialog, dialog_type in dialogs_to_delete:
        try:
            await client.delete_dialog(dialog.entity)
            
            # –ü–û–ù–Ø–¢–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø –î–õ–Ø –ö–ê–ñ–î–û–ì–û –¢–ò–ü–ê:
            if dialog_type == "–ë–û–¢":
                print(f"ü§ñ –£–¥–∞–ª–∏–ª –±–æ—Ç–∞: {dialog.name}")
            elif dialog_type == "–õ–ò–ß–ù–´–ô –ß–ê–¢":
                print(f"üë§ –£–¥–∞–ª–∏–ª –ª–∏—á–Ω—ã–π —á–∞—Ç: {dialog.name}")
            elif dialog_type == "–ì–†–£–ü–ü–ê":
                print(f"üë• –í—ã—à–µ–ª –∏–∑ –≥—Ä—É–ø–ø—ã: {dialog.name}")
            elif dialog_type == "–ö–ê–ù–ê–õ":
                print(f"üì¢ –û—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞: {dialog.name}")
            elif dialog_type == "–°–£–ü–ï–†–ì–†–£–ü–ü–ê":
                print(f"üí¨ –í—ã—à–µ–ª –∏–∑ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã: {dialog.name}")
            else:
                print(f"üóëÔ∏è –£–¥–∞–ª–∏–ª: {dialog.name}")
                
            success += 1
            await asyncio.sleep(1)
            
        except Exception as e:
            print(f"üî• –û—à–∏–±–∫–∞ —Å {dialog.name}: {str(e)}")
            errors += 1
            await asyncio.sleep(2)
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "="*50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("="*50)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {errors}")
    print("\n‚ú® –ì–æ—Ç–æ–≤–æ! –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Ç–æ–ª—å–∫–æ —á–∞—Ç—ã –∏–∑ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞")

# –ó–∞–ø—É—Å–∫–∞–µ–º
asyncio.run(main())